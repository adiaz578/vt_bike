// Cryptol CFB Implementation
// Copyright (c) 2010-2018, Galois Inc.
// www.cryptol.net
// You can freely use this source code for educational purposes.
// Author: Ajay Kumar Eeralla

module Primitive::Symmetric::Cipher::Block::Modes::CFB where

// set the sizes
type iv = [128]
type block = [128]


cfbEnc : {n, k} (fin n, fin k) => ([k]->block -> block) -> [k] -> iv -> [n]block -> [n]block
cfbEnc enc k iv ps = cs
    where cs = [ (enc k c')^p | p <- ps | c' <- [iv] # cs ]

cfbDec : {n, k} (fin n, fin k) => ([k]->block -> block) -> [k] -> iv -> [n]block -> [n]block
cfbDec enc k iv cs = [ (enc k c')^c | c <- cs | c' <- [iv] # cs ]

// This will need to be parameterized with a specific encryption function before it can be proved
property cfbEncCorrect encrypt k c ps = (cfbDec encrypt k c (cfbEnc encrypt k c ps)) == ps


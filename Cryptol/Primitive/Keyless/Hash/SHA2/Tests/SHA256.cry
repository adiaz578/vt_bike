/**
 * Test vectors for SHA256 as specified in [FIPS-180-4].
 *
 * These vectors were originally specified in [CSG-SHA], but we also used the
 * convenient collected test vectors page from David Ireland.
 * @see DI Management https://www.di-mgt.com.au/sha_testvectors.html
 *
 * @copyright Galois, Inc
 * @author Marcella Hastings <marcella@galois.com>
 *
 * [CSG-SHA]: National Institute of Standards and Technology. Example
 *     algorithms - Secure hashing.
 *     @see http://csrc.nist.gov/groups/ST/toolkit/examples.html
 *     @see https://csrc.nist.gov/csrc/media/projects/cryptographic-standards-and-guidelines/documents/examples/sha_all.pdf
 * [FIPS-180-4]: National Institute of Standards and Technology. Secure Hash
 *     Standard (SHS). (Department of Commerce, Washington, D.C.), Federal
 *     Information Processing Standards Publication (FIPS) NIST FIPS 180-4.
 *     August 2015.
 *     @see https://doi.org/10.6028/NIST.FIPS.180-4
 */
module Primitive::Keyless::Hash::SHA2::Tests::SHA256 where
import Primitive::Keyless::Hash::SHA2::Instantiations::SHA256 as SHA256

/**
 * ```repl
 * :prove abcWorks
 * ```
 */
property abcWorks = SHA256::hash (join "abc") == output where
    output = join [
        0xba7816bf, 0x8f01cfea, 0x414140de, 0x5dae2223,
        0xb00361a3, 0x96177a9c, 0xb410ff61, 0xf20015ad
    ]

/**
 * ```repl
 * :prove emptyStringWorks
 * ```
 */
property emptyStringWorks = SHA256::hash [] == output where
    output = join [
        0xe3b0c442, 0x98fc1c14, 0x9afbf4c8, 0x996fb924,
        0x27ae41e4, 0x649b934c, 0xa495991b, 0x7852b855
    ]

/**
 * ```repl
 * :prove alphabet448
 * ```
 */
property alphabet448 = SHA256::hash input == output where
    input = join "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq"
    output = join [
        0x248d6a61, 0xd20638b8, 0xe5c02693, 0x0c3e6039,
        0xa33ce459, 0x64ff2167, 0xf6ecedd4, 0x19db06c1
    ]

/**
 * ```repl
 * :prove alphabet896
 * ```
 */
property alphabet896 = SHA256::hash input == output where
    input = join "abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu"
    output = join [
        0xcf5b16a7, 0x78af8380, 0x036ce59e, 0x7b049237,
        0x0b249b11, 0xe8f07a51, 0xafac4503, 0x7afee9d1
    ]
